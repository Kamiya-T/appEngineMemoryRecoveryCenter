:: Story JavaScript [script]

UIBar.destroy()
if (document.location.href.toLowerCase().includes("/temp/") || document.location.href.toLowerCase().includes("/private/") || hasOwnProperty.call(window, "storyFormat")) {
	// Change this to the path where the HTML file is
	// located if you want to run this from inside Twine.
	setup.Path = "C:/Games/MyGame/";  // Running inside Twine application
} else {
	setup.Path = "client/";  // Running in a browser
}
setup.JSLoaded = false;
var lockID = LoadScreen.lock();  // Lock loading screen
importScripts(setup.Path + "socket.io.js", setup.Path + "microevent.js").then(function() {
    importScripts(setup.Path + "tg_client.js").then(function() {
		setup.JSLoaded = true;
		setup.memberUpdate = false;
		setup.passageGoNumber = Array(10);
		setup.passageGoNumber.fill(0)
		setup.memberNumber = 0;
		setup.answerNumber = 0;
		// Reload current passage since imported scripts can function now.
		Engine.play(passage(), true);
		LoadScreen.unlock(lockID);  // Unlock loading screen
//*******************************BIND HERE**************************
    TwineGang.bind("roomInfo", (data)=>{
      	setup.RoomNum = data;
    });
    TwineGang.bind("newList", (data)=>{
      	setup.MemberList = data;
    });
	TwineGang.bind("newMember", (data)=>{
		setup.MemberList.push(data);
		setup.memberUpdate = true;
	});
	TwineGang.bind("userClickButton", (id)=>{
		setup.passageGoNumber[id]++;
	});
//*******************************BIND  END**************************
	}).catch(function(error) {
		alert(error);
	});
  }
);


:: StoryTitle
記憶回復センター

:: Start [mv]
<div class = "text" id = "center">
<font size="5">被験者は氏名を入力してください。</font>
<<textbox "$name" "" "Login">>
<div class="btn-group">
<<button "次へ" "Login">><</button>>
[[検査官の質問]]
</div>\
</div>\
:: Login
<div class = "text" id = "center">
<<set $RoomID to 0>>
進行マニュアル
1.GM、又は進行役が新規ルームを作成する。
2.画面に表示される部屋番号をプレイヤーと共有。
3.他プレイヤーは部屋番号を用いて既存ルームに接続
<span id="RoomIdDisplay"></span>
		<<button '新規ルームを作成する'>>
    		<<script>>
    			  TwineGang.createNewRoom(State.variables.name);
    		<</script>>
			<<timed 100ms>>
				<<set $RoomID to setup.RoomNum>>
			    <<script>>
					Engine.play("ルームロビー")
    			<</script>>
			<</timed>>
		<</button>>



  部屋番号⇒<<numberbox "$seconds" 0>>

	<<button '既存ルームに接続する'>>
			<<script>>
        		TwineGang.joinExistRoom(State.variables.seconds, State.variables.name, setup.callback);
			<</script>>
			<<timed 100ms>>
				<<set $RoomID to setup.RoomNum>>
			    <<script>>
					Engine.play("ルームロビー")
    			<</script>>
			<</timed>>
		<</button>>
</div>
:: ルームロビー
<div class = "text">
<font size="7">	部屋番号：<<print $RoomID>></font>
  	<ul id="memberlist"></ul>
    <<script>>
    $(document).one(':passagedisplay', function (ev) {
		setup.memberNumber = 0;
        for (let member of setup.MemberList) {
			setup.memberNumber++;
            let li = document.createElement('li');
            li.textContent = member;
            document.getElementById('memberlist').appendChild(li);
        }
    });
    <</script>>
	<<silently>><<repeat 1s>><<script>>
		if(setup.memberUpdate){
			setup.memberUpdate = false;
			setup.memberNumber = 0;
			let element = document.getElementById('memberlist');
			while(element.firstChild){
				element.removeChild(element.firstChild);
			}
           	for (let member of setup.MemberList) {
				setup.memberNumber++;
           		let li = document.createElement('li');
           		li.textContent = member;
           		document.getElementById('memberlist').appendChild(li);
        	}
        }
		if(setup.passageGoNumber[0] == setup.memberNumber){
			Engine.play("検査官の質問")
		}
		<</script>>
		<<replace '#passageGoNumber'>>\
			2. 被験者全員の準備が出来次第、検査官との面談を実施する。
			<<print setup.passageGoNumber[0]>> / <<print setup.memberNumber>>
		<</replace>>
	<</repeat>><</silently>>
	<span id="message">1. 被験者全員のログインを確認する。</span>
	<span id="passageGoNumber">\
	2. 被験者全員の準備が出来次第、検査官との面談を実施する。
	<<print setup.passageGoNumber[0]>> / <<print setup.memberNumber>></span>
	<span id="hidbtn" style="display: initial">\
		  <<button "次へ">>
		  	<<script>>
				$('#hidbtn').css('display', 'none');
				TwineGang.clickButton(0);
				setup.passageGoNumber[0]++;
			<</script>>
		  <</button>>
	</span>\
</div>

:: 検査官の質問
<<script>>
	$(document).one(":typingcomplete", function (ev) {
		setTimeout(function(){
			Engine.play("質問フェーズ");
  		},60000);
	});
<</script>>
<div class = "text">
<<type 100ms none>>\
個室に戻り、ドアを閉める。
ドアの閉まる音が、やけに重く響いた。

検査官がモニター越しにこちらを見ている。

「………………」
「さて、心の準備は出来ましたか」
「では、お聞きしますね」

『あなたにとってその『死んだフリをしている』男……
　死体と呼んでいるその人は何者ですか？』
どくん。
<font size="5">どくん。</font>
<font size="6">どくん。
鼓動が大きくなる。

検査官の質問に対し、3分以内に回答すること。</font>
<</type>>
<div class = "bottomdiv">
<<button "回答" "質問フェーズ">><</button>>
</div>
</div>
:: 質問フェーズ
<div class = "text" id = "center">\
<div class="clock">\
<p class="clock-time" id="time">00:00.00</p>\
</div>\
<<script>>
	$(document).one(':passagedisplay', function (ev) {
		var span = document.getElementById('time');
		var countdown = new Countdown(span, 181);
		countdown.init();
		countdown.start();
	});
<</script>>
<span id="question">\
<font size="5">\

『あなたにとってその『死んだフリをしている』男……
　死体と呼んでいるその人は何者ですか？』</font>
</span>\
<span id="hidans" style="display: initial">\
<<textarea "$answer" "">>
</span>\
<<timed 185s>>
	<<script>>
	$('#hidans').css('display', 'none');
	TwineGang.sendAnswer(State.variables.answer, 1);
	setup.answerNumber++;
	<</script>>
<</timed>>

<<silently>><<repeat 100ms>><<script>>
	if(setup.passageGoNumber[1] == setup.memberNumber){
		Engine.play("エンディング判定");
	}
	<</script>>
	<<replace 'question'>>\
		全員の回答を集計しています。お待ちください。
		<<print setup.passageGoNumber[1]>> / <<print setup.memberNumber>>
	<</replace>>
<</repeat>><</silently>>
<<button "回答する" "エンディング分岐">>
	<<script>>
		$('#hidans').css('display', 'none');
		TwineGang.sendAnswer(State.variables.answer, 1);
		setup.answerNumber++;
	<</script>>
<</button>>
:: エンディング分岐
[[END A]]
[[END B]]
[[END C]]
[[END B-1]]
[[END B-2]]
[[END B-3]]
[[END D]]
[[END E]]
</div>

:: StoryData
{
"ifid": "623A713C-4D15-437C-8CA1-23EF109ED1A1",
"format": "SugarCube",
"format-version": "2.36.1"
}

:: PassageFooter [nobr]
<<if !tags().includes("bbar")>>
<div id="bottombar">
<div id="bbblock">
<div id="bbtext" align="left">
<span id="restart" class="inline">
<<button '<span class="sc-icon sc-power" style="display: inline-block;"></span> やり直す'>>
	<<script>>
		Dialog.setup("初めからやり直す");
		Dialog.wiki('本当に初めからやり直しますか？
		<<button "はい">><<run Engine.restart()>><</button>>
		<<run Dialog.open()>>');
	<</script>>
<</button>>
</span>
<span id="backbtn" class="inline">
<<button '<span class="sc-icon sc-backward" style="display: inline-block;"></span> 一つ戻る'>>
<<run Engine.backward()>>
<</button>>
</span>

<<script>>
$(document).one(":passagedisplay", function (event) {
	if (State.length < 2) {
		$("#backbtn button").prop("disabled", true);
	}
});

<</script>>
</div></div></div>
<</if>>
